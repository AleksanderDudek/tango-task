{"version":3,"sources":["components/CharactersTable.tsx","service/httpService.tsx","components/HouseCard.tsx","components/HouseDetails.tsx","service/constants.tsx","components/Filters/CultureFilter.tsx","components/Filters/GenderFilter.tsx","components/Filters/PaginationFilter.tsx","components/Filters/Filters.tsx","components/PaginationButtons.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["getAlliegences","allegiances","houses","length","housesAndUris","i","houseId","match","push","houseName","houseUrl","toString","map","item","to","pathname","getFullName","name","aliases","naming","aliasing","join","getCurrentStatus","deathInfo","birthInfo","deathYears","birthYears","Number","CharactersTable","data","TableContainer","id","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","characters","row","index","scope","died","born","gender","culture","books","povBooks","charactersApi","housesApi","charactersQueries","getCharacters","pageIndex","resultsPerPage","fetchUrl","axios","get","isValidStringArray","stringArray","HouseCard","props","currentHouse","Card","CardContent","Typography","color","gutterBottom","variant","region","coatOfArms","words","titles","title","Chip","label","seats","seat","diedOut","style","display","flexDirection","overlord","cadetBranches","HouseDetails","Gender","useState","isLoading","setIsLoading","setCurrentHouse","useEffect","getHouse","params","apiUrl","then","response","values","concArray","AppBar","position","Toolbar","process","className","CircularProgress","CultureFilter","typingTimer","onTypingDone","setCulture","FormControl","TextField","placeholder","defaultValue","onKeyUp","event","clearTimeout","setTimeout","target","value","onKeyDown","cultureError","error","helperText","GenderFilter","InputLabel","Select","labelId","genderFilter","onChange","setGenderFilter","MenuItem","Female","Male","Unknown","PaginatationFilter","perPage","setPerPage","Filters","PaginationButtons","onClickHandle","link","url","URL","pageNumber","searchParams","setCurrentPage","ButtonGroup","Button","onClick","linkHeaders","first","prev","disabled","currentPage","next","last","parseLinkHeaders","arrData","split","parsed_data","d","linkInfo","exec","nextPageNumber","newUrl","set","App","housesCache","setHousesCache","setCharacters","setLinkHeaders","cultureFilter","setCultureFilter","setCultureError","Promise","all","links","headers","rejection","catch","fontFamily","fontSize","textAlign","basename","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.961ba82e.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Character from '../models/Character';\r\nimport House, { HousesAndUris } from '../models/House';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\ninterface IProps {\r\n    characters: Array<Character>,\r\n    houses: Array<House>\r\n}\r\n\r\nfunction getCulture(culture: string) {\r\n    if (culture.length == 0) return 'Unknown';\r\n\r\n    return culture;\r\n}\r\n\r\nfunction getGender(gender: string) {\r\n\r\n    const dg = gender && gender.length > 0 ? gender : 'Unknown';\r\n\r\n    return dg;\r\n}\r\n\r\nfunction getAlliegences(allegiances: Array<string>, houses: Array<House>) {\r\n\r\n    if (allegiances.length == 0) return 'None';\r\n\r\n\r\n    //n*n\r\n    let housesAndUris: Array<HousesAndUris> = [];\r\n\r\n    // //api doesn't get all houses as it should thus we\r\n    //         //cant retrieve matching houses\r\n    // for (let i = 0; i < allegiances.length; i++) {\r\n    //     for (let j = 0; j < houses.length; j++) {\r\n\r\n\r\n\r\n    //         const arg1 = allegiances[i].match(/\\d+/g);\r\n    //         const arg2 = houses[j].url.match(/\\d+/g);\r\n    //         // console.log('arg1 ', arg1);\r\n    //         // console.log('arg2 ', arg2);\r\n\r\n    //         if (!!arg1 && !!arg2) {\r\n\r\n    //             if(arg1 == arg2) {\r\n    //                 housesAndUris.push({\r\n    //                     houseName: houses[j].name,\r\n    //                     houseUrl: houses[j].url\r\n    //                 });\r\n    //             }\r\n    //         };\r\n    //     };\r\n    // };\r\n    // //match downloaded houses urls with urls I have downloaded\r\n    // if (housesAndUris.length == 0) return 'None';\r\n\r\n    for (let i = 0; i < allegiances.length; i++) {\r\n        const houseId = allegiances[i].match(/\\d+/g);\r\n\r\n        housesAndUris.push({\r\n            houseName: 'House ' + houseId,\r\n            houseUrl: houseId[0].toString()\r\n        });\r\n    }\r\n\r\n    return housesAndUris.map((item: HousesAndUris) =>\r\n        <>\r\n            <Link\r\n                key={item.houseName+item.houseUrl}\r\n                to={{\r\n                    pathname: \"/house/\"+item.houseUrl,\r\n                }}>\r\n                {item.houseName}\r\n            </Link>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction isValidStringArray(stringArray: Array<string>) {\r\n    if (stringArray[0] === \"\") return false;\r\n    return true;\r\n}\r\n\r\nfunction getFullName(name: string, aliases: Array<string>) {\r\n\r\n    const naming = (name.length > 0 ? name : \"\");\r\n    const aliasing = (aliases.length > 0 ? aliases.join(\", \") : \"\");\r\n    const separator = name.length > 0 && (isValidStringArray(aliases)) ? \", \" : \"\";\r\n    const fullName = naming + separator + aliasing;\r\n\r\n    return fullName;\r\n}\r\n\r\nfunction getCurrentStatus(deathInfo: string, birthInfo: string) {\r\n\r\n    if (deathInfo.length == 0) return 'Yes';\r\n    if (birthInfo.length == 0) return 'Missing correct data';\r\n\r\n    const deathYears = deathInfo.match(/\\d+/g);\r\n    const birthYears = birthInfo.match(/\\d+/g);\r\n\r\n    if (deathYears && birthYears) {\r\n        const deathAge = deathYears.map(Number)[0] - birthYears.map(Number)[0];\r\n        return 'No, died at ' + deathAge + ' years old';\r\n    }\r\n\r\n    return 'Missing correct data';\r\n}\r\n\r\nfunction CharactersTable(data: IProps) {\r\n\r\n    return (\r\n        <TableContainer id=\"charactersTable\" component={Paper}>\r\n            <Table aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell key=\"Index\">Nr</TableCell>\r\n                        <TableCell key=\"Character\">Character</TableCell>\r\n                        <TableCell align=\"right\" key=\"Alive\">Alive</TableCell>\r\n                        <TableCell align=\"right\" key=\"Gender\">Gender</TableCell>\r\n                        <TableCell align=\"right\" key=\"Culture\">Culture</TableCell>\r\n                        <TableCell align=\"right\" key=\"Allegiances\">Allegiances</TableCell>\r\n                        <TableCell align=\"right\" key=\"Books\"># of Books</TableCell>\r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {data.characters.map((row: Character, index: number) => (\r\n                        <TableRow key={row.name + index}>\r\n                            <TableCell key={\"Index\"+ index}>{index+1}</TableCell>\r\n                            <TableCell key={row.name + index + index} component=\"th\" scope=\"row\">\r\n                                {getFullName(row.name, row.aliases)}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\" key={row.name + index + index + 'alive'}>{getCurrentStatus(row.died, row.born)}</TableCell>\r\n                            <TableCell align=\"right\" key={row.name + index + index + 'gender'}>{getGender(row.gender)}</TableCell>\r\n                            <TableCell align=\"right\" key={row.name + index + index + 'culture'}>{getCulture(row.culture)}</TableCell>\r\n                            <TableCell align=\"right\" key={row.name + index + index + 'houses'}>\r\n                                {getAlliegences(row.allegiances, data.houses)}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\" key={row.name + index + index + 'books'}>{row.books.length + row.povBooks.length}</TableCell>\r\n\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n\r\n    );\r\n}\r\n\r\nexport default CharactersTable;\r\n","import axios from 'axios';\r\n\r\nconst charactersApi= 'https://www.anapioficeandfire.com/api/characters';\r\n\r\nconst housesApi = 'https://www.anapioficeandfire.com/api/houses';\r\n\r\nconst charactersQueries = {\r\n    page: '?page=',\r\n    pageSize: '&pageSize=',\r\n    gender: '&gender=',\r\n    culture: '&culture='\r\n};\r\n\r\n//get all characters\r\nexport function getCharacters (pageIndex: number = 1, resultsPerPage: number = 10, \r\n    gender: string = '', culture: string = '') {\r\n   \r\n    const fetchUrl = charactersApi \r\n        + charactersQueries.page + pageIndex.toString()\r\n        + charactersQueries.pageSize + resultsPerPage.toString()\r\n        + charactersQueries.gender + gender\r\n        + charactersQueries.culture + culture;\r\n\r\n\r\n    return axios.get(fetchUrl);\r\n}\r\n\r\n\r\n//get all houses\r\nexport function getHouses () {\r\n   \r\n    const fetchUrl = housesApi;\r\n\r\n    return axios.get(fetchUrl);\r\n    \r\n}\r\n\r\nexport function getHouse (id: string) {\r\n   \r\n    const fetchUrl = housesApi + `/${id}`;\r\n        \r\n\r\n    return axios.get(fetchUrl);\r\n    \r\n}","import {  Card, CardContent, Chip, Typography } from '@material-ui/core';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\r\n\r\nfunction isValidStringArray(stringArray: Array<string>) {\r\n    if (stringArray[0] === \"\") return false;\r\n    return true;\r\n}\r\n\r\nfunction HouseCard(props : any) {\r\n\r\n    const { currentHouse } = props;\r\n\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom variant=\"h5\" component=\"h2\" id=\"houseName\">\r\n                    {currentHouse.name || \"\"}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h3\" id=\"region\">\r\n                    Region: {currentHouse.region || \"\"}\r\n                </Typography>\r\n                <br />\r\n                <Typography color=\"textSecondary\" id=\"coat\">\r\n                    Coat of arms: {currentHouse.coatOfArms || \"\"}\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"body2\" component=\"p\" id=\"words\">\r\n                    Words:\r\n                                <br />\r\n                    {currentHouse.words ? currentHouse.words : \"No words\"}\r\n                </Typography>\r\n                <br />\r\n                <div id=\"titles\">\r\n                    Titles:\r\n                                <br />\r\n                    {isValidStringArray(currentHouse.titles)\r\n                        ? currentHouse.titles.map((title: string) => <Chip key={title} label={title} color=\"primary\" />)\r\n                        : \"None titles\"\r\n                    }\r\n                </div>\r\n                <br />\r\n                <div id=\"seats\">\r\n                    <br />\r\n                                Seats:\r\n                                <br />\r\n                    {isValidStringArray(currentHouse.seats)\r\n                        ? currentHouse.seats.map((seat: string) => <Chip key={seat} label={seat} color=\"secondary\" />)\r\n                        : \"None seats\"\r\n                    }\r\n                </div>\r\n                <br />\r\n                <div id=\"diedOut\">\r\n                    Has died out: {\r\n                        currentHouse.diedOut.length > 0\r\n                            ? <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                <CheckOutlinedIcon color=\"primary\" />\r\n                                <span>\"Yes\"</span>\r\n                            </div>\r\n                            : <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                <CancelOutlinedIcon color=\"primary\" />\r\n                                <span>\"No\"</span>\r\n                            </div>\r\n                    }\r\n                </div>\r\n                <br />\r\n                <div id=\"overlord\">\r\n                    Has overlord: {\r\n                        currentHouse.overlord.length > 0\r\n                            ? <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                <CheckOutlinedIcon color=\"primary\" />\r\n                                <span>\"Yes\"</span>\r\n                            </div>\r\n                            : <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                <CancelOutlinedIcon color=\"primary\" />\r\n                                <span>\"No\"</span>\r\n                            </div>\r\n                    }\r\n                </div>\r\n                <br />\r\n                <div id=\"cadetBranches\">\r\n                    Number of cadet branches:\r\n                                <br />\r\n                    {currentHouse.cadetBranches.length}\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default HouseCard;","\r\nimport { AppBar, CircularProgress, Toolbar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport House from '../models/House';\r\nimport { getHouse } from '../service/httpService';\r\nimport HouseCard from './HouseCard';\r\n\r\n\r\nfunction HouseDetails(props: any) {\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [currentHouse, setCurrentHouse] = useState<House>();\r\n\r\n    useEffect(() => {\r\n        getHouse(props.match.params.apiUrl).then(response => response.data).then(values => {\r\n            setCurrentHouse(values);\r\n        }).then((concArray) => {\r\n            setIsLoading(false);\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"sticky\" color=\"default\">\r\n                <Toolbar>\r\n                    <Link to={process.env.PUBLIC_URL + \"/\"}>Go back</Link>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {isLoading ? \r\n            <div className=\"progressContainer\">\r\n                <CircularProgress />\r\n            </div>\r\n             :  <HouseCard currentHouse = {currentHouse} />\r\n            }\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default HouseDetails;\r\n","export enum Gender {\r\n    Male = 'Male',\r\n    Female = 'Female',\r\n    Unknown = 'Unknown'\r\n}","\r\nimport { FormControl, FormControlClassKey } from '@material-ui/core';\r\nimport TextField, { TextFieldClassKey } from '@material-ui/core/TextField';\r\nimport React, { useEffect, useState,  } from 'react';\r\n\r\nfunction CultureFilter(props: any) {\r\n\r\n    let typingTimer: any;\r\n    const maxTypingTime = 500;\r\n    \r\n    const onTypingDone = (culture: string) => {\r\n        //set state \r\n        props.setCulture(culture);\r\n    }\r\n\r\n    function onKeyUp(event: any) {\r\n        clearTimeout(typingTimer);\r\n        typingTimer = setTimeout(onTypingDone, maxTypingTime, event.target.value as string);\r\n    }\r\n\r\n    function onKeyDown() {\r\n        clearTimeout(typingTimer);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <FormControl>\r\n            <TextField id=\"outlined-basic\" label=\"Culture\" variant=\"outlined\" placeholder=\"Type culture...\" \r\n             defaultValue={props.culture} \r\n            onKeyUp={event => onKeyUp(event)} onKeyDown={event => onKeyDown()} \r\n            {...(props.cultureError && { error: true, helperText : \"This culture doesn't exist.\"} )}\r\n            />\r\n        </FormControl>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default CultureFilter;\r\n","\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { Gender } from '../../service/constants';\r\n\r\nfunction GenderFilter(props: any) {\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    props.setGenderFilter(event.target.value as number);\r\n  };\r\n\r\n    return (\r\n        <>\r\n        <FormControl variant=\"filled\">\r\n        <InputLabel id=\"demo-simple-select-filled-label\">Gender</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-filled-label\"\r\n          id=\"demo-simple-select-filled\"\r\n          value={props.genderFilter}\r\n          defaultValue={props.genderFilter}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={Gender.Female}>{Gender.Female}</MenuItem>\r\n          <MenuItem value={Gender.Male}>{Gender.Male}</MenuItem>\r\n          <MenuItem value={Gender.Unknown}>{Gender.Unknown}</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GenderFilter;\r\n","\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction PaginatationFilter(props: any) {\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    props.setPerPage(event.target.value as number);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormControl variant=\"filled\">\r\n        <InputLabel id=\"demo-simple-select-filled-label\">Age</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-filled-label\"\r\n          id=\"demo-simple-select-filled\"\r\n          value={props.perPage}\r\n          defaultValue={props.perPage}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={10}>10 results</MenuItem>\r\n          <MenuItem value={25}>25 results</MenuItem>\r\n          <MenuItem value={50}>50 results</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default PaginatationFilter;\r\n","\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CultureFilter from './CultureFilter';\r\nimport GenderFilter from './GenderFilter';\r\nimport PaginatationFilter from './PaginationFilter';\r\nimport './Filters.css';\r\n\r\nfunction Filters(props: any) {\r\n\r\n    return (\r\n        <>\r\n        <AppBar position=\"sticky\" color=\"default\">\r\n        <Toolbar>\r\n        <div className='filtersContainer'>\r\n            <div className='filterContainer'>\r\n            <PaginatationFilter setPerPage={props.setPerPage} perPage={props.perPage} />\r\n            </div>\r\n            <div className='filterContainer'>\r\n            <GenderFilter genderFilter={props.genderFilter} setGenderFilter={props.setGenderFilter} />\r\n            </div>\r\n            <div className='filterContainer'>\r\n            <CultureFilter culture={props.culture} setCulture={props.setCulture} cultureError={props.cultureError} />\r\n            </div>\r\n        </div>\r\n        </Toolbar>\r\n      </AppBar>     \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Filters;\r\n","\r\nimport { Button, ButtonGroup, Container } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Pagination.css';\r\n\r\nfunction PaginationButtons(props : any) {\r\n\r\n    function onClickHandle(link: string) {\r\n        const url = new URL(link);\r\n        const pageNumber = (Number)(url.searchParams.get(\"page\"));\r\n        props.setCurrentPage(pageNumber);\r\n    }\r\n\r\n    return (\r\n        <div className=\"progressContainer\">\r\n<ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n                <Button onClick={() => onClickHandle(props.linkHeaders.first)}>First page</Button>\r\n                <Button onClick={() => onClickHandle(props.linkHeaders.prev)}>Previous page</Button>\r\n                <Button disabled={true}> {props.currentPage} </Button>\r\n                <Button onClick={() => onClickHandle(props.linkHeaders.next)}>Next page</Button>\r\n                <Button onClick={() => onClickHandle(props.linkHeaders.last)}>Last page</Button>\r\n            </ButtonGroup>\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\n\r\nexport default PaginationButtons;\r\n","import './App.css';\nimport CharactersTable from './components/CharactersTable';\nimport HouseDetails from './components/HouseDetails';\nimport House from './models/House'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n\n} from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport Character, { HeaderLinks } from './models/Character';\nimport { getCharacters, getHouses } from './service/httpService';\nimport { Gender } from './service/constants';\nimport Filters from './components/Filters/Filters';\nimport PaginationButtons from './components/PaginationButtons';\nimport { CircularProgress } from '@material-ui/core';\nimport { Offline, Online } from 'react-detect-offline';\nimport './App.css';\n\n\nfunction parseLinkHeaders (linkHeaders: string) {\n  let arrData = linkHeaders.split(\"link:\");\n  linkHeaders = arrData.length == 2? arrData[1]: linkHeaders;\n  let parsed_data: HeaderLinks = {};\n\n  arrData = linkHeaders.split(\",\");\n\n  for (const d of arrData) {\n      const linkInfo = /<([^>]+)>;\\s+rel=\"([^\"]+)\"/ig.exec(d);\n\n      parsed_data[linkInfo[2]]=linkInfo[1];\n    };\n\n  //we can 'learn' if previous exists, api behaves WEIRD\n  if(!parsed_data[\"prev\"]) {\n    const url = new URL(parsed_data.next);\n    const nextPageNumber = (Number)(url.searchParams.get(\"page\"));\n\n    //previous is last aka first page\n    if(nextPageNumber == 2) {\n      parsed_data[\"prev\"] = parsed_data.last;\n    } else {\n      const newUrl = new URL(parsed_data.next);\n      const searchParams =  newUrl.searchParams;\n      searchParams.set('page', (nextPageNumber-2).toString() )\n      parsed_data[\"prev\"] = newUrl;\n    }\n  };\n\n  if(!parsed_data[\"next\"]) {\n    parsed_data[\"next\"] = parsed_data.first;\n  };\n\n  //here we can calculate whether previous is last (on 1st page) or next page number - 2;\n  return parsed_data;\n\n};\n\nfunction App(props: any) {\n\n  const [isLoading, setIsLoading] = useState(true); \n  const [housesCache, setHousesCache] = useState<Array<House>>([]);\n  const [characters, setCharacters] = useState<Array<Character>>([]);\n  const [perPage, setPerPage] = useState(10);\n  const [genderFilter, setGenderFilter] = useState(Gender.Unknown);\n\n  const[currentPage, setCurrentPage] = useState(1);\n  //set navigation calls\n  const [linkHeaders, setLinkHeaders] = useState<HeaderLinks>();\n\n  //only already existing scores\n  const [cultureFilter, setCultureFilter] = useState('');\n  const [cultureError, setCultureError] = useState(false);\n\n  //get houses and characters initially\n  useEffect(() => {\n    Promise.all([\n      getCharacters().then( response => {\n        const links = parseLinkHeaders(response.headers.link);\n        setLinkHeaders(links);\n\n        //simplified error flow\n        setCultureError(false);\n        return response.data;\n      }, rejection => {\n\n        //simplified error flow\n        setCultureError(true);\n        return characters;\n      }).then(data => {\n        setCharacters(data);\n      }),\n      getHouses().then( response => { return response.data;\n      }, rejection => {\n        return housesCache;\n      }).then(data => {\n        setHousesCache(data);\n      }),\n    ]).then((concArray) => {\n      setIsLoading(false);\n    })\n    }, []);\n\n  //get characters when filters change or page number is changed\n  useEffect(() => {\n    setIsLoading(true);\n    //check filters - does culture 'match' has to be strict? imo it should \n    //match some of the words \n    getCharacters(currentPage, perPage, genderFilter, cultureFilter).then( response => {\n      const links = parseLinkHeaders(response.headers.link);\n       //simplified error flow\n       setCultureError(false);\n      setLinkHeaders(links);\n      return response.data;\n    }, rejection => {\n\n       //simplified error flow\n       setCultureError(true);\n      return characters;\n    }).then(data => {\n      setCharacters(data);\n    }).then((concArray) => {\n    setIsLoading(false);\n  }).catch(error => { \n    //some error logger\n    //simplified error flow\n    setCultureError(true);\n\n    setIsLoading(false);\n  })\n    //create correct api 'shot'\n    //set new data\n\n  }, [genderFilter, cultureFilter, perPage, currentPage]);\n  //\n\n  return (\n    <div>\n        {/* logo */}\n      <div style={{fontFamily: 'GameOfThrones', fontSize: 20, textAlign: 'center'}}>\n        <span>Game of Thrones - Tango task</span>\n      </div>\n      <Online>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Switch>\n            {/* house display */}\n            <Route path={\"/house/:apiUrl\"} \n            component={HouseDetails} />\n            {/* table */}\n            <Route path={\"/\"}>\n              <div>\n              {\n                isLoading ? \n                <div className='progressContainer' id='progressSpinnerApp'>\n                  <CircularProgress />\n                </div>\n                : \n                <>\n                <Filters setPerPage={setPerPage} perPage={perPage} genderFilter={genderFilter} setGenderFilter={setGenderFilter} \n                culture={cultureFilter} setCulture={setCultureFilter} cultureError={cultureError} />\n                <CharactersTable characters={characters} houses={housesCache} />\n                <PaginationButtons linkHeaders={linkHeaders} currentPage={currentPage} setCurrentPage={setCurrentPage}/>\n                </>\n              }\n              </div>\n            </Route>\n          </Switch>\n      </Router>\n    </Online>\n    <Offline>\n      Pardon mua, but you are offline. Please do check your internet connection before procceeding.\n    </Offline>\n      \n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}